import re
from telegram import Update, MessageEntity
from telegram.ext import Application, MessageHandler, filters, CallbackContext

TOKEN = '8084478893:AAFM_VQOn7lwTZZpmorl44Sf5NFT6NxC7Ak'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è "–†–∞–∑–º—É—Ç @user_id"
async def unmute_user(context: CallbackContext):
    job = context.job
    chat_id = job.chat_id
    user_id = job.data['user_id']

    await context.bot.send_message(chat_id=chat_id, text=f"–†–∞–∑–º—É—Ç @{user_id}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: CallbackContext):
    message = update.message

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    if "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: Iris | –ß–∞—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä" in message.text:
        # –ò—â–µ–º —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∏–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        match = re.search(r'üîá (.*?) –ª–∏—à–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∞ —Å–ª–æ–≤–∞', message.text)
        if match:
            display_name = match.group(1)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id = None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–Ω–æ—Å—Ç–∏ –¥–ª—è –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if message.entities:
                for entity in message.entities:
                    # –ï—Å–ª–∏ —Å—É—â–Ω–æ—Å—Ç—å - —ç—Ç–æ TEXT_LINK (—Å–∫—Ä—ã—Ç–∞—è –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞)
                    if entity.type == MessageEntity.TEXT_LINK:
                        user_id = entity.url.split('/')[-1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º user_id –∏–∑ —Å—Å—ã–ª–∫–∏
                        break
                    # –ï—Å–ª–∏ —Å—É—â–Ω–æ—Å—Ç—å - —ç—Ç–æ MENTION (—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ @username)
                    elif entity.type == MessageEntity.MENTION:
                        user_id = message.text[entity.offset + 1:entity.offset + entity.length]  # –ò–∑–≤–ª–µ–∫–∞–µ–º username
                        break

            # –ï—Å–ª–∏ user_id –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ —Å—É—â–Ω–æ—Å—Ç–∏, –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –µ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞
            if not user_id:
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å user_id –∏–ª–∏ username –∏–∑ —Ç–µ–∫—Å—Ç–∞
                user_id_match = re.search(r'https://t.me/(\w+)', message.text)
                if user_id_match:
                    user_id = user_id_match.group(1)

            if user_id:
                chat_id = message.chat_id

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ú—É—Ç @user_id"
                await context.bot.send_message(chat_id=chat_id, text=f"–ú—É—Ç @{user_id}")

                # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–†–∞–∑–º—É—Ç @user_id"
                context.job_queue.run_once(
                    callback=unmute_user,
                    when=0,  # –ß–µ—Ä–µ–∑ 0 —Å–µ–∫—É–Ω–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
                    data={'user_id': user_id},
                    chat_id=chat_id
                )
            else:
                # –ï—Å–ª–∏ user_id –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                await context.bot.send_message(
                    chat_id=message.chat_id,
                    text=f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å user_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {display_name}. "
                         f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."
                )
                # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–µ–¥–µ–º –≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                await context.bot.send_message(
                    chat_id=message.chat_id,
                    text=f"–°—É—â–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {message.entities}"
                )

def main():
    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()